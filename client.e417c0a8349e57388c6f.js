(()=>{"use strict";class e extends EventTarget{constructor(e){super();for(const t of e)this.init(t)}init(e){Object.defineProperty(this,`on${e}`,{set(t){this.on(e,t)}})}on(e,t){this.addEventListener(e,t)}emit(e,t){this.dispatchEvent(new CustomEvent(e,{detail:t}))}}const t=e,n=Array.from(Array(8),(()=>Math.floor(16*Math.random()).toString(16))).join(""),s=document.querySelector(".text-user-id"),i=document.querySelector(".input-user-id"),o=document.querySelector(".file-user-id"),a=document.querySelector(".open");s.innerHTML=n;const r=new class{constructor(e){this.id=e.id,this.peer=e.peer}async open(e,t){if(t[0]){let e=new FileReader;e.readAsText(t[0]),e.onload=async()=>{const t=JSON.parse(e.result);if("offer"==t.sdp.type){const e=await this.peer.createAnswer(t.id,t.sdp),n=document.createElement("a"),s=new Blob([JSON.stringify({id:this.id,sdp:e})],{type:"text/sdp"}),i=window.URL.createObjectURL(s);n.href=i,n.download="answer.sdp",n.click(),window.URL.revokeObjectURL(i)}else"answer"==t.sdp.type&&await this.peer.setAnswer(t.id,t.sdp)}}else{const t=await this.peer.createOffer(e),n=document.createElement("a"),s=new Blob([JSON.stringify({id:e,sdp:t})],{type:"text/sdp"}),i=window.URL.createObjectURL(s);n.href=i,n.download="offer.sdp",n.click(),window.URL.revokeObjectURL(i)}}}({id:n,peer:new class extends t{constructor(e){super(["open","message","close"]),this.id=e.id,this.peerConnections={},this.dataChannels={}}async createOffer(e){this.peerConnections[e]=new RTCPeerConnection,this.dataChannels[e]=await this.peerConnections[e].createDataChannel(e),this.setupPeerConnection(e),this.setupDataChannel(e);const t=await this.peerConnections[e].createOffer();return await this.peerConnections[e].setLocalDescription(t),await new Promise(((t,n)=>{this.peerConnections[e].onicecandidate=n=>{t(this.peerConnections[e].localDescription)}}))}async createAnswer(e,t){this.peerConnections[e]=new RTCPeerConnection,this.peerConnections[e].addEventListener("datachannel",(t=>{this.dataChannels[e]=t.channel,this.setupDataChannel(e)})),this.setupPeerConnection(e),await this.peerConnections[e].setRemoteDescription(t);const n=await this.peerConnections[e].createAnswer();return await this.peerConnections[e].setLocalDescription(n),n}async setAnswer(e,t){await this.peerConnections[e].setRemoteDescription(t)}setupPeerConnection(e){this.peerConnections[e].addEventListener("connectionstatechange",(t=>{"disconnected"!=t.target.connectionState&&"failed"!=t.target.connectionState||this.close(e)}))}setupDataChannel(e){this.dataChannels[e].addEventListener("open",(t=>{this.emit("open",[e,t])})),this.dataChannels[e].addEventListener("message",(t=>{this.emit("message",[e,t])}))}close(e){this.peerConnections[e]&&(this.dataChannels[e].close(),this.peerConnections[e].close(),delete this.dataChannels[e],delete this.peerConnections[e])}send(e,t){this.dataChannels[e].send(JSON.stringify(t))}}(n)});a.addEventListener("click",(()=>{r.open(i.value,o.files)})),r.peer.onopen=()=>{console.log("OPEN")}})();